syntax = "proto3";
package gopkg.in.srcd.proteus.v1.example;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "example";

message Category {
	option (gogoproto.goproto_stringer) = false;
	option (gogoproto.typedecl) = false;
	int64 id = 1 [(gogoproto.customname) = "ID"];
	google.protobuf.Timestamp created_at = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	google.protobuf.Timestamp updated_at = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	google.protobuf.Timestamp deleted_at = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	string name = 5;
	gopkg.in.srcd.proteus.v1.example.Type type = 6;
	string color = 7 [(gogoproto.casttype) = "Color"];
	gopkg.in.srcd.proteus.v1.example.CategoryOptions options = 8 [(gogoproto.nullable) = false];
}

// CategoryOptions is not marked for generations, but it is used in another
// structs, so it will be generated because of it.
message CategoryOptions {
	option (gogoproto.typedecl) = false;
	bool show_prices = 1;
	bool can_buy = 2;
}

message MyTime {
	option (gogoproto.typedecl) = false;
	google.protobuf.Timestamp time = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	string name = 2;
}

message Product {
	option (gogoproto.typedecl) = false;
	int64 id = 1 [(gogoproto.customname) = "ID"];
	google.protobuf.Timestamp created_at = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	google.protobuf.Timestamp updated_at = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	google.protobuf.Timestamp deleted_at = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	string name = 5;
	double price = 6;
	repeated string tags = 7;
	int64 category_id = 8 [(gogoproto.customname) = "CategoryID"];
}

message GetAlphaTimeRequest {
}

message GetOmegaTimeRequest {
}

message GetPhoneRequest {
}

message RandomCategoryRequest {
}

message RandomNumberRequest {
	double arg1 = 1;
	double arg2 = 2;
}

message RandomNumberResponse {
	double result1 = 1;
}

// Type will be transformed into an enum.
enum Type {
	option (gogoproto.enumdecl) = false;
	option (gogoproto.goproto_enum_prefix) = false;
	option (gogoproto.goproto_enum_stringer) = false;
	PUBLIC = 0 [(gogoproto.enumvalue_customname) = "Public"];
	PRIVATE = 1 [(gogoproto.enumvalue_customname) = "Private"];
	CUSTOM = 2 [(gogoproto.enumvalue_customname) = "Custom"];
}

service ExampleService {
	rpc GetAlphaTime (gopkg.in.srcd.proteus.v1.example.GetAlphaTimeRequest) returns (gopkg.in.srcd.proteus.v1.example.MyTime);
	rpc GetOmegaTime (gopkg.in.srcd.proteus.v1.example.GetOmegaTimeRequest) returns (gopkg.in.srcd.proteus.v1.example.MyTime);
	rpc GetPhone (gopkg.in.srcd.proteus.v1.example.GetPhoneRequest) returns (gopkg.in.srcd.proteus.v1.example.Product);
	rpc RandomCategory (gopkg.in.srcd.proteus.v1.example.RandomCategoryRequest) returns (gopkg.in.srcd.proteus.v1.example.CategoryOptions);
	rpc RandomNumber (gopkg.in.srcd.proteus.v1.example.RandomNumberRequest) returns (gopkg.in.srcd.proteus.v1.example.RandomNumberResponse);
}

